apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'maven'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

//    implementation 'com.alibaba:fastjson:1.1.71.android'
    implementation 'com.alibaba:fastjson:1.2.70'
}

//在gradle文件最下方新建一个打包任务.
//maven上传,示例代码将aar输出到了本地,如果公司有maven私服,可以将地址改为maven私服的地址
def MAVEN_LOCAL_PATH = 'http://nexus.hupu.io/repository/hupu-android/'
//版本号
def VERSION = '0.0.1'
//公司名称
def GROUP_ID = 'com.hupu.android'
//aar包名称
def ARTIFACT_ID = 'faceunity'
//Maven私服账号
def ACCOUNT = 'kr'
//Maven私服密码
def PWD = 'FgbI27KC3Jwc'
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: MAVEN_LOCAL_PATH) {
                //如果使用的是maven私服,一般都需要账号密码
                authentication(userName :ACCOUNT,password:PWD)
            }
            pom.groupId = GROUP_ID
            pom.artifactId = ARTIFACT_ID
            pom.version = VERSION
            pom.packaging = 'aar'

        }
    }
}
